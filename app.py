from flask import Flask
from flask_socketio import SocketIO, join_room, emit


app = Flask(__name__)
socketio = SocketIO()
from routes.chat_room import websocket_event

# 直接运行，注释这句。gunicorn 使用
socketio.init_app(app)

# 不要包在函数内，gunicorn 需要
import config
# web framework
# web application
# __main__
# app = Flask(__name__)
# 设置 secret_key 来使用 flask 自带的 session
# generated by uuid.uuid4()
app.secret_key = config.secret_key

# too sick
# 搞不懂，为什么不这么写，俩个 socketio 就不一样
# 变相添加 socketio handler
# from routes.chat_room import websocket_event

from routes.index import main as index_routes
from routes.todo import main as todo_routes
from routes.api.todo import main as api_todo_routes
from routes.weibo.index import main as weibo_routes
from routes.chat_room.index import main as chat_room_routes
app.register_blueprint(index_routes)
app.register_blueprint(todo_routes, url_prefix='/todo')
app.register_blueprint(api_todo_routes, url_prefix='/api/v1.0/todo')
app.register_blueprint(weibo_routes, url_prefix='/weibo')
app.register_blueprint(chat_room_routes, url_prefix='/chat-room')


if __name__ == '__main__':
    config = dict(
        debug=True,
        host='0.0.0.0',
        port=2000,
    )

    # too sick
    # 搞不懂，为什么不这么写，俩个 socketio 就不一样
    from routes.chat_room.websocket_event import socketio

    # gunicorn，注释这句。给直接使用
    # socketio.init_app(app)

    socketio.run(app, **config)

